// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	context "context"

	domain "github.com/martinusiron/loan-service/domain"
	mock "github.com/stretchr/testify/mock"
)

// ApprovalRepository is an autogenerated mock type for the ApprovalRepository type
type ApprovalRepository struct {
	mock.Mock
}

type ApprovalRepository_Expecter struct {
	mock *mock.Mock
}

func (_m *ApprovalRepository) EXPECT() *ApprovalRepository_Expecter {
	return &ApprovalRepository_Expecter{mock: &_m.Mock}
}

// CreateApproval provides a mock function with given fields: ctx, a
func (_m *ApprovalRepository) CreateApproval(ctx context.Context, a *domain.LoanApproval) error {
	ret := _m.Called(ctx, a)

	if len(ret) == 0 {
		panic("no return value specified for CreateApproval")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *domain.LoanApproval) error); ok {
		r0 = rf(ctx, a)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ApprovalRepository_CreateApproval_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateApproval'
type ApprovalRepository_CreateApproval_Call struct {
	*mock.Call
}

// CreateApproval is a helper method to define mock.On call
//   - ctx context.Context
//   - a *domain.LoanApproval
func (_e *ApprovalRepository_Expecter) CreateApproval(ctx interface{}, a interface{}) *ApprovalRepository_CreateApproval_Call {
	return &ApprovalRepository_CreateApproval_Call{Call: _e.mock.On("CreateApproval", ctx, a)}
}

func (_c *ApprovalRepository_CreateApproval_Call) Run(run func(ctx context.Context, a *domain.LoanApproval)) *ApprovalRepository_CreateApproval_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*domain.LoanApproval))
	})
	return _c
}

func (_c *ApprovalRepository_CreateApproval_Call) Return(_a0 error) *ApprovalRepository_CreateApproval_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ApprovalRepository_CreateApproval_Call) RunAndReturn(run func(context.Context, *domain.LoanApproval) error) *ApprovalRepository_CreateApproval_Call {
	_c.Call.Return(run)
	return _c
}

// NewApprovalRepository creates a new instance of ApprovalRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewApprovalRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *ApprovalRepository {
	mock := &ApprovalRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
